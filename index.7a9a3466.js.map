{"mappings":"CCmCA,AA/BA,SAA2B,CAAM,EAC/B,EAAO,OAAO,CAAC,SAAC,CAAhB,EACE,IAAM,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,SAAS,CAAG,cAClB,EAAM,OAAO,CAAG,EAAM,EAAE,CAKxB,IAAK,IAHC,EAAY,EAAM,IAAI,CACxB,EAAgB,GAEX,EAAI,EAAG,EAAI,EAAU,MAAM,CAAE,IAChC,CAAS,CAAC,EAAE,GAAK,CAAS,CAAC,EAAE,CAAC,WAAW,IAAM,AAAM,IAAN,GACjD,CAAA,GAAiB,GADnB,EAIA,GAAiB,CAAS,CAAC,EAAE,CAR/B,IAWM,EAAuB,EAC1B,IAAI,GACJ,KAAK,CAAC,KACN,GAAG,CAAC,SAAC,CAHR,EAGiB,OAAA,CAAI,CAAC,EAAE,CAAC,WAAW,GAAK,EAAK,KAAK,CAAC,GAAG,WAAW,EAC/D,GAAA,IAAI,CAAC,IAER,CAAA,EAAM,WAAW,CAAG,EAAqB,WAAW,GACpD,EAAM,WAAW,CAAG,EAEpB,EAAM,UAAU,CAAC,YAAY,CAAC,EAAO,EACvC,EACF,EA/BsB,SAAS,gBAAgB,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar inputElements = document.querySelectorAll(\"input\");\nfunction addLableForInputs(inputs) {\n    inputs.forEach(function(input) {\n        var label = document.createElement(\"label\");\n        label.className = \"field-label\";\n        label.htmlFor = input.id;\n        var inputName = input.name;\n        var formattedName = \"\";\n        for(var i = 0; i < inputName.length; i++){\n            if (inputName[i] === inputName[i].toUpperCase() && i !== 0) formattedName += \" \";\n            formattedName += inputName[i];\n        }\n        var displayFormattedName = formattedName.trim().split(\" \").map(function(word) {\n            return word[0].toUpperCase() + word.slice(1).toLowerCase();\n        }).join(\" \");\n        label.textContent = displayFormattedName.toUpperCase();\n        input.placeholder = displayFormattedName;\n        input.parentNode.insertBefore(label, input);\n    });\n}\naddLableForInputs(inputElements);\n\n//# sourceMappingURL=index.7a9a3466.js.map\n","'use strict';\n\nconst inputElements = document.querySelectorAll('input');\n\nfunction addLableForInputs(inputs) {\n  inputs.forEach((input) => {\n    const label = document.createElement('label');\n\n    label.className = 'field-label';\n    label.htmlFor = input.id;\n\n    const inputName = input.name;\n    let formattedName = '';\n\n    for (let i = 0; i < inputName.length; i++) {\n      if (inputName[i] === inputName[i].toUpperCase() && i !== 0) {\n        formattedName += ' ';\n      }\n\n      formattedName += inputName[i];\n    }\n\n    const displayFormattedName = formattedName\n      .trim()\n      .split(' ')\n      .map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase())\n      .join(' ');\n\n    label.textContent = displayFormattedName.toUpperCase();\n    input.placeholder = displayFormattedName;\n\n    input.parentNode.insertBefore(label, input);\n  });\n}\n\naddLableForInputs(inputElements);\n"],"names":["addLableForInputs","inputs","forEach","input","label","document","createElement","className","htmlFor","id","inputName","name","formattedName","i","length","toUpperCase","displayFormattedName","trim","split","map","word","slice","toLowerCase","join","textContent","placeholder","parentNode","insertBefore","querySelectorAll"],"version":3,"file":"index.7a9a3466.js.map"}